name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
        matrix:
            os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Git semver
      uses: paulhatch/semantic-version@v4.0.2
      id: semver
      with:
        tag_prefix: "v"
        major_pattern: "(MAJOR)"
        minor_pattern: "(MINOR)"
        format: "${major}.${minor}.${patch}-${increment}"
        short_tags: true
        bump_each_commit: false
    - name: Show current version
      run: |
        echo 'Building version ${{steps.semver.outputs.version}}'    
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Zip artifacts
      uses: papeloto/action-zip@v1
      with:
        files: target/release/bomctl target\release\bomctl.exe
        dest: release_${{matrix.os}}_${{steps.semver.outputs.version}}.zip
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: release_${{matrix.os}}_${{steps.semver.outputs.version}}
        path: |
          release_${{matrix.os}}_${{steps.semver.outputs.version}}.zip
        if-no-files-found: error
  publish:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
    steps:
    - uses: actions/download-artifact@v2
      id: download
    - name: Display structure of downloaded files
      run: ls -R
    - name: Publish pre-release
      uses: marvinpinto/action-automatic-releases@latest
      if: false == startsWith(github.ref, 'refs/tags/')
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          ${{steps.download.outputs.download-path}}/
    - name: Publish release
      uses: marvinpinto/action-automatic-releases@latest
      if: startsWith(github.ref, 'refs/tags/')
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        title: "Release Build"
        files: |
          {{steps.download.outputs.download-path}}/